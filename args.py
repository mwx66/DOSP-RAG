# -*- codeing = utif-8 -*-
# @Time：2024/12/916:38
# @File:args.py
# @software:PyCharm
from langchain.chains.query_constructor.base import AttributeInfo

patterns={
    "中国气象局":r"中国气象局规章\nX\n中国气象局发布\n- \d+ -",
    "北京市":r"\d+\n",
    "广东省":r"广东省人民政府规章\nX\n广东省人民政府发布\n- \d+ -",
    "苏州市":r"—\s*\d+\s*—",
    "重庆市":r"\n重庆市气象局行政规范性文件 \n\s*\n\s*\n重庆市气象局发布\s*\n\s*- \d+ -",
    "青海省":r"青海省人民政府规章\nX\n青海省人民政府发布\n- \d+ -"
}

schema_c={
                "Page_content": ["地区", "预警信号", "分类"],
                "Metadata": ["地区", "预警信号"]
}
schema_d= {
                "Page_content": ["地区", "预警信号", "防御指南"],
                "Metadata": ["地区", "预警信号"]
            }
schema_e={
                "Page_content": ["地区", "预警信号", "标准"],
                "Metadata": ["地区", "预警信号"]
}


metadata_field_info = [
    AttributeInfo(
        name="region",
        description="发生气象灾害的地区，具体地区包括['北京市','重庆市', '青海省', '广东省','中国气象局','苏州市']",
        type="string",
    ),
    AttributeInfo(
        name="signal",
        description="气象灾害预警信号",
        type="string",
    )
]

document_content_description = "中国各地区气象灾害预警信号的防御指南"


extract_object1='''
query: 
抽取文本中所有具体的气象灾害预警信号
constraint：
1. 具体的气象灾害预警信号中带有明确的颜色,如：蓝色、黄色、橙色、红色、白色等
2. 提取的预警信号严格参照文本，不得篡改
3. 以{"1":"提取的第一个预警信号","2":"提取的第二个预警信号",...}的json格式返回
4. 如果文本中不存在具体的气象灾害预警信号，则以{"signal":"None"}的json格式返回
5. '森林火险'属于气象灾害
sub_query:
文本内容是具体的气象灾害预警信号（即预警信号前带有颜色,如：蓝色、黄色、橙色、红色、白色等）
符合需求的文本如：
{'1':'暴雨红色预警信号'};{'1': '台风橙色预警信号', '2': '台风红色预警信号','3':'森林火险橙色预警信号'}
不符合需求的文本如：
{ '1': '暴雪预警信号'}，因为'暴雪预警信号'中没有颜色,不是具体的预警信号
满足部分需求的文本如：
{'1':'台风红色预警信号','2':'暴雪预警信号'},'暴雪预警信号'不满足需求，但'台风红色预警信号'符合需求，需要提取'台风红色预警信号'
'''
extract_object2='''
query: 
抽取给定文本中所有粗粒度气象灾害预警信号
constraint：
1. 粗粒度气象灾害预警信号的形式为：气象灾害+预警信号，预警信号前没有颜色（例如台风预警信号）
2. 气象灾害包括：台风、暴雨、暴雪、寒潮、大风、沙尘暴、高温、寒冷、干旱、雷电、冰雹、霜冻、大雾、霾、道路结冰、持续低温、电线积冰、森林火险等
3. 文本中存在粗粒度信号,以{"1":"抽取的第一个粗粒度预警信号","2":"抽取的第二个粗粒度预警信号",...}的json格式返回
4. 文本中不存在粗粒度信号，则以{"signal":"None"}的json格式返回
sub_query:
文本内容需为粗粒度的气象灾害预警信号，（即预警信号前不带有颜色,如：蓝色、黄色、橙色、红色、白色等）
符合需求的文本如：
{'1':'台风预警信号'},{'1':'暴雪预警信号'}等
不符合需求的文本如：
{'1':'台风红色预警信号'}，因为'台风红色预警信号'中有'红色',不是粗粒度的预警信号
满足部分需求的文本如：
{'1':'台风红色预警信号','2':'暴雪预警信号'},'台风红色预警信号'不符合需求，但'暴雪预警信号'符合需求，需要提取'暴雪预警信号'
'''

extract_defense='''
attribute:
防御指南/防御指引
constraint：
属性信息在目标对象后面
example:
{'attribute': '1.政府及相关部门按照职责做好防台风准备工作；2.停止露天集体活动和高空等户外危险作业；3.相关水域水上作业和过往船舶采取积极的应对措施，如回港避风或者绕道航行等；4.加固门窗、围板、棚架、广告牌等易被风吹动的搭建物，切断危险的室外电源。'}

'''

extract_standard='''
attribute:
标准/含义
constraint：
属性信息在目标对象后面
example:
{'attribute': '24 小时内可能或者已经受热带气旋影响，沿海或者陆地平均风力达 6 级以上，或者阵风 8 级以上并可能持续。'}
'''

extract_classification='''
attribute:
分类
constraint：
属性信息在目标对象后面
example:
{'attribute': '台风蓝色预警信号,台风黄色预警信号,台风橙色预警信号,台风红色预警信号'}
'''

